一、crypto 加密模块
	
	var crypto = require('crypto');
			--加载模块

	var md5 = crypto.createHash('md5');
			--选择加密方式
		var md5 = crypto.createHmac('md5','momo');
			--结合指定的口令进行加密
	mdb.update('123456');
			--加密的字符串
	var newStr = mdb.digest('hex');
			--输出


	简写
	var newStr = crypto.createHash('md5').update('123456').digest('hex');

二、集成加密模块

	var crypto = require('crypto');
	function cryptoStr(str){
		var newStr = crypto.createHash('md5').update(str).digest('hex');
		return newStr;
	}
	module.exports = cryptoStr;

三、所有加密方式

	console.log(crypto.getHashes());
			--打印模块允许使用的加密方式

	[
	  'DSA',
	  'DSA-SHA',
	  'DSA-SHA1',
	  'DSA-SHA1-old',
	  'RSA-MD4',
	  'RSA-MD5',
	  'RSA-MDC2',
	  'RSA-RIPEMD160',
	  'RSA-SHA',
	  'RSA-SHA1',
	  'RSA-SHA1-2',
	  'RSA-SHA224',
	  'RSA-SH256',
	  'RSA-SHA384',
	  'RSA-SHA512',
	  'dsaEncryption',
	  'dsaWithSHA',
	  'dsaWithSHA1',
	  'dss1',
	  'ecdsa-with-SHA1',
	  'md4',
	  'md4WithRSAEncryption',
	  'md5',
	  'md5WithRSAEncryption',
	  'mdc2',
	  'mdc2WithRSA',
	  'ripemd',
	  'ripemd160',
	  'ripemd160WithRSA',
	  'rmd160',
	  'sha',
	  'sha1',
	  'sha1WithRSAEncryption',
	  'sha224',
	  'sha224WithRSAEncryption',
	  'sha256',
	  'sha256WithRSAEncryption',
	  'sha384',
	  'sha384WithRSAEncryption',
	  'sha512',
	  'sha512WithRSAEncryption',
	  'shaWithRSAEncryption',
	  'ssl2-md5',
	  'ssl3-md5',
	  'ssl3-sha1',
	  'whirlpool' 
	]
