=====================================================================
                      Flexible 手淘设计方案(vw)
=====================================================================

amfe-flexible
    vue 中使用
        https://www.w3cplus.com/mobile/vw-layout-in-vue.html


        新增插件(需要下载)
            postcss-aspect-ratio-mini       主要用来处理元素容器宽高比。
            postcss-px-to-viewport          插件主要用来把px单位转换为vw、vh、vmin或者vmax这样的视窗单位，也是vw适配方案的核心插件之一。
            postcss-write-svg               插件主要用来处理移动端1px的解决方案。
            postcss-cssnext                 该插件可以让我们使用CSS未来的特性，其会对这些特性做相关的兼容性处理。著作权归作者所有。
            cssnano                         主要用来压缩和清理CSS代码
            postcss-viewport-units          主要是给CSS的属性添加content的属性，配合viewport-units-buggyfill库给vw、vh、vmin和vmax做适配的操作。

            cnpm i postcss-aspect-ratio-mini postcss-px-to-viewport postcss-write-svg postcss-cssnext postcss-viewport-units cssnano --S

            cnpm i cssnano-preset-advanced --save-dev


        .postcssrc.js 文件修改

            module.exports = {
                "plugins": {
                    "postcss-import": {},
                    "postcss-url": {},
                    "postcss-aspect-ratio-mini": {},
                    "postcss-write-svg": {
                        utf8: false
                    },
                    "postcss-cssnext": {},
                    "postcss-px-to-viewport": {
                        viewportWidth: 750, // 视窗的宽度，对应的是我们设计稿的宽度，一般是750 
                        viewportHeight: 1334, // 视窗的高度，根据750设备的宽度来指定，一般指定1334，也可以不配置 
                        unitPrecision: 3, // 指定`px`转换为视窗单位值的小数位数（很多时候无法整除） v
                        iewportUnit: 'vw', // 指定需要转换成的视窗单位，建议使用vw 
                        selectorBlackList: ['.ignore', '.hairlines'], // 指定不转换为视窗单位的类，可以自定义，可以无限添加,建议定义一至两个通用的类名 
                        minPixelValue: 1, // 小于或等于`1px`不转换为视窗单位，你也可以设置为你想要的值 
                        mediaQuery: false // 允许在媒体查询中转换`px`
                    }, 
                    "postcss-viewport-units": {},
                    "cssnano": {
                        preset: "advanced",
                        autoprefixer: false,
                        "postcss-zindex": false
                    }
                }
            }

        index.html
            <script src="//g.alicdn.com/fdilab/lib3rd/viewport-units-buggyfill/0.6.2/??viewport-units-buggyfill.hacks.min.js,viewport-units-buggyfill.min.js"></script>

            <script> window.onload = function () {
                    window.viewportUnitsBuggyfill.init({
                        hacks: window.viewportUnitsBuggyfillHacks
                    });
                } 
            </script>

            <script>
                window.onload = function () {
                    window.viewportUnitsBuggyfill.init({
                        hacks: window.viewportUnitsBuggyfillHacks
                    });
                    var winDPI = window.devicePixelRatio;
                    var uAgent = window.navigator.userAgent;
                    var screenHeight = window.screen.height;
                    var screenWidth = window.screen.width;
                    var winWidth = window.innerWidth;
                    var winHeight = window.innerHeight;
                    alert( "Windows DPI:" + winDPI +
                        ";\ruAgent:" + uAgent +
                        ";\rScreen Width:" + screenWidth +
                        ";\rScreen Height:" + screenHeight +
                        ";\rWindow Width:" + winWidth +
                        ";\rWindow Height:" + winHeight
                    )
                } 
            </script>