1.安装 wepy 命令行工具。

    npm install wepy-cli -g

2. 生成项目
    wepy init standard my-app

    wepy list    // 查看模板目录

3. 实时编译项目

    wepy build --watch
    wepy build -w



类
    wepy.app          app
    wepy.page         页面
    wepy.component    组件

    app
        import wepy from 'wepy';
        export default class MyAPP extends wepy.app {
            customData = {};

            customFunction ()　{ }

            onLaunch () {}

            onShow () {}

            config = {}  // 对应 app.json 文件

            globalData = {}
        }
    component/page
        import wepy from 'wepy';

        // export default class MyPage extends wepy.page {
        export default class MyComponent extends wepy.component {
            customData = {}  // 自定义数据

            customFunction ()　{}  //自定义方法

            onLoad () {}  // 在Page和Component共用的生命周期函数

            onShow () {}  // 只在Page中存在的页面生命周期函数

            config = {};  // 只在Page实例中存在的配置数据，对应于原生的page.json文件

            data = {};  // 页面所需数据均需在这里声明，可用于模板数据绑定

            components = {};  // 声明页面中所引用的组件，或声明组件中所引用的子组件

            mixins = [];  // 声明页面所引用的Mixin实例

            computed = {};  // 声明计算属性（详见后文介绍）

            watch = {};  // 声明数据watcher（详见后文介绍）

            methods = {};  // 声明页面wxml中标签的事件处理函数。注意，此处只用于声明页面wxml中标签的bind、catch事件，自定义方法需以自定义方法的方式声明

            events = {};  // 声明组件之间的事件处理函数
        }