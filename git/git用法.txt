mkdir gitname		创建文件，仓库
cd gitname			进入仓库



git init		
		仓库初始化，产生一个.git隐藏目录

git config --global user.name "name"
git config --global user.email "邮箱地址"
		本地设置

git add filename	将文件添加到暂存区

git rm --cached * 删除add添加到暂存区的文件（所有）

git diff index.html	
		查看更改的地方
		与版本库对比

git status 		查看当前仓库的状态

git commit -m "注释"	
		将文件从暂存区提交到版本库


git log 	查看日志
git reflog	所有历史日志
git log --graph	图形化显示版本信息

git reset --hard HEAD^	进入上一个版本
git reset --hard HEAD~10	退回到上10个版本
git reset --hard comit_id	退回指定版本


分支=========本地操作
	master 		主分支

	git branch			显示所有分支
	git branch 分支名		创建分支
	git checkout dev		切换分支到dev
	git checkout -b bug
					创建分支同事切换分支

	git merge dev		将dev分支合并到master

	git branch -D 分支名 	删除分支

	git log --graph --pretty=oneline --abbrev-commit
					图形化显示分支信息


===================================================================
===================================================================

推送到服务器=========远程连接仓库

	git remote add origin git@github.com:wozhendehenfanya/lianxi.git
			建立连接 origin--连接名称

	git remote set-url origin git@github.com:someaccount/someproject.git			修改连接

	git clone git@github.com:wozhendehenfanya/lianxi.git
			克隆到本地
	git push origin master
			推送
	git push -u origin master
			第一次推送master分支的所有内容；

	git pull origin master					远程分支拉取

	git fetch pb表示地址			//拉取没有的

	git remote     查看远程仓库列表
	git remote -v    查看远程仓库列表
	git remote --verbose    查看远程仓库列表

	git remote show origin			查看远程仓库的详细信息

	git remote rename name1 name2      修改远程仓库在本地的名称

	git remote rm name1								移除对应的远程仓库,断开连接


vim 编辑文件 ESC
	vim index.html
		i 	进入编辑模式
		:q	退出
		:w	保存
		:wq	保存退出
		:!q	强制退出-不保存

生成秘钥（要添加密钥）
	ssh-keygen -t rsa -C "gitHub地址"
		位置：users/administrator/.ssh

		.pub			文件是公钥，添加到github

		将秘钥添加到GitHub账户中(github 步骤)
			Settings--》SSH and GPG keys -->SSH Keys


标签
	git tag v1.0	添加标签
	git tag			查看所有标签

	git push origin v1.0
				推送标签到远程仓库
	git reset --hard v1.0
				退回版本
	git tag -d v2.0
				删除版本
	git tag v0.9 commit_id
				对指定的版本添加tag
	git push origin --tags
				一次性推送所有的标签
	git push origin :refs/tags/v2.0
				删除远程服务器的标签
