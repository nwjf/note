==========================================
vue.config
==========================================

	Vue.config.silent = true;					//	取消 Vue 所有的日志与警告。
	Vue.config.devtools = true;			// 务必在加载 Vue 之后，立即同步设置以下内容,配置是否允许 vue-devtools 检查代码。开发版本默认为 true，生产版本默认为 false。生产版本设为 true 可以启用检查。
	Vue.config.productionTip = false; // 设置为 false 以阻止 vue 在启动时生成生产提示。
	Vue.config.debug = true;				// 开启debug


========================================================
生命周期
==========================================================

	beforeCreate(创建前),						// 没有

	created(创建后),

	beforeMount(载入前),

	mounted(载入后),

	beforeUpdate(更新前),

	updated(更新后),

	beforeDestroy(销毁前),

	destroyed(销毁后),

	data : {},	//定义变量

	methods : {},	//定义方法的地方

	computed : {},	//计算属性

	watch : {}	//监测

	filters : {}	//过滤器


	//创建Vue实例
	new Vue({
		el : '#box',	//绑定器查找
	});

======================================================
vue的解析环境
======================================================

	v-model=""		将元素的值和指定的变量链接在一起

	v-text=""		将变量的值输出到指定的位置

	v-html=""		解析html文本，输出到指定位置，

	v-on:click=""	绑定事件--简写  @click=""

	v-bind:href="msg"	设置属性--简写  :href="msg"

	v-show="true"	元素显示true\false,显示隐藏,节点存在

	v-if="true"		
		判断元素是否产生.
		ture	产生节点
		false	该元素节点不存在
	v-else=""

	
	v-for="(value,index) in users"
		--循环，valse--值
				index--序号
				users--循环的数组

	$event		事件源对象
	.stop		阻止事件冒泡

	this.$emit('memeda',info);	//触发自定义事件，info为参数




	3·模板嵌套
		components : {
			parent : {
				data : function(){
					return {
						msg : '==> 我是夫级变量 <=='
					}
				},
				template : '<h3>我是夫级组件--<sub1>{{msg}}</sub1></h3>',
				components : {
					'sub1' : {
						template : '<h4>我是子级组件<slot>--我是占位符--</slot></h4>'
					}
				}
			}
		}
		// slot 占位符，当父级组件向子组件传递数据时，slot原有的数据就隐藏，如果不传递数据该位置就显示slot原有的数据



本地数据读取

	读取储存本地数据
	localStorage.getItem();		读取
	localStorage.setItem();		设置到，保存到本地


	<style scoped>	</style>		只对当前生效







main.js中项目语法

	Vue.config.productionTip = false			//关闭生产模式的提示
	Vue.config.debug = true							//开启debug
